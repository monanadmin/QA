#!/bin/python3
import sys

def myFunc(e):
  return e['code_line']

def checkFile(chave,fileName,lines):
   csvuv_list = []
   total_line = 0
   for l_cnt in range(len(lines)):
      try:
         if "-W"+chave not in lines[l_cnt+4]:
            continue
      except:
         continue
      line_1 = lines[l_cnt]
      line_3 = lines[l_cnt+2]
      line_5 = lines[l_cnt+4]
      campos = line_1.split(":")
      source = campos[0]
      if fileName not in source:
         continue
      code_line = int(campos[1])
      column = campos[2]
      code = line_3.split("|")[1]
      var = line_5.split("‘")[1].split("’")[0]
      csvuv_list.append({"code_line":code_line,"var":var,"code":code})
      total_line = total_line + 1

   csvuv_list.sort(key = myFunc )
   print("Testing ",chave," I found ",total_line, "lines!")

   csvuv = open(fileName+"-"+chave+".csv","w")
   line_print = "{:7d},{:20s},{:}"
   for line in csvuv_list:
      csvuv.write(line_print.format(line["code_line"],line["var"],line["code"]))
   csvuv.close()
   return 0

if len(sys.argv) < 3:
   print("Try: check_gfortran.py <file_in> <source_file>\n")
   print(" Ex: check_gfortran.py saida.txt modConParGF.F90\n")
   print("<file_in> is generated by gfortran with option -Wall\n")
   exit()

fileIn = sys.argv[1]
fileName = sys.argv[2]
try:
   file = open(fileIn,"r")
except:
   print("Something Wrong - check file input!\n\n")
   print("Try: check_gfortran.py <file_in> <source_file>\n")
   print(" Ex: check_gfortran.py saida.txt modConParGF.F90\n")
   print("<file_in> is generated by gfortran with option -Wall\n")
   exit()
lines = file.readlines()
file.close()

print("\nSearching in ",fileIn," for ",fileName)
print(fileIn," has ",len(lines), "lines.\n")

checkFile("unused-variable",fileName,lines)
checkFile("unused-dummy-argument",fileName,lines)
checkFile("unused-value",fileName,lines)
print("Done!\n")
